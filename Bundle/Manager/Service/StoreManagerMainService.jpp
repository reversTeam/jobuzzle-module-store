#import (Config.path +'/Kernel/Service/MasterService') = MasterService;

class StoreManagerMainService extends MasterService {

	_sock = undefined;

	#default get, set for _sock;

	initialize : function () {
		_super();
		var serviceManger = serviceLocator.get("ServiceManger");
		var client_sock = serviceManger.get("client_websocket_main_service");
		this._collections = {};
		this.setSock(client_sock);

		this.onListen();
	}

	onListen : function  () {
		var dispatcher = serviceLocator.get("Dispatcher");

		dispatcher.listen("a:b:c",this, this.onRequest.bind(this));
		dispatcher.listen("Store:Manager:addCollection",this, this.addCollection.bind(this));

		this._sock.on("request", this, this.onRequest);
	}

	onRequest : function  (s, data) {
		
	}

	addCollection : function  (s, data) {
		var collectionManger = serviceLocator.get("CollectionManger")

		if (!data || !data.name)
			throw "You send a empty Collection !";
		if (this._collections[data.name])
			throw "Collection " + data.name + " already exists";

		this._collections[data.name] = collectionManger.get(data.name);
	}
};

#export StoreManagerMainService;
